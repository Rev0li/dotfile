local alpha = require("alpha")
local dashboard = require("alpha.themes.dashboard")

dashboard.section.header.val = {
  [[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
  [[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
  [[‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ÄNEOVIM DASHBOARD‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä]],
  [[‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Äüß†  Bienvenue, boss‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä]],
  [[‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚†è‚†Ä‚†ÄüìÅ  Projets √† dominer‚†Ä‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä]],
  [[‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ª‚¢ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°ø‚†ü‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä]],
}

dashboard.section.buttons.val = {
  dashboard.button("f", "üîç  Trouver un fichier", ":Telescope find_files<CR>"),
  dashboard.button("e", "üìÑ  Nouveau fichier", ":ene <BAR> startinsert <CR>"),
  dashboard.button("d", "üìÅ  Ouvrir l'arborescence", ":NvimTreeToggle<CR>"),
  dashboard.button("r", "üïò  Fichiers r√©cents", ":Telescope oldfiles<CR>"),
  dashboard.button("q", "‚ùå  Quitter", ":qa<CR>"),
}

dashboard.section.footer.val = "üíª 42 | Config by Rev0li ‚ù§Ô∏è"
dashboard.section.footer.opts.hl = "Constant"

alpha.setup(dashboard.config)
-- Ajout dans dashboard.lua : S√©lecteur de th√®me
local function set_theme(name)
  vim.cmd("colorscheme " .. name)
end

local themes = {
  { "tokyonight", "üåÉ  Tokyo Night" },
  { "catppuccin", "üç®  Catppuccin" },
  { "nightfox",   "ü¶ä  Nightfox" },
  { "rose-pine",  "üåπ  Rose Pine" },
  { "gruvbox",    "üé®  Gruvbox" },
}

for i, theme in ipairs(themes) do
  table.insert(dashboard.section.buttons.val, i + 5, 
    dashboard.button(tostring(i), theme[2], "<cmd>lua require'dashboard'.set_theme('" .. theme[1] .. "')<CR>"))
end

-- Expose set_theme via require('dashboard').set_theme
local M = {}
M.set_theme = set_theme
return M
